#*************************************************************************
 #
 # ADOBE CONFIDENTIAL
 # ___________________
 #
 #  Copyright 2016 Adobe Systems Incorporated
 #  All Rights Reserved.
 #
 # NOTICE:  All information contained herein is, and remains
 # the property of Adobe Systems Incorporated and its suppliers,
 # if any.  The intellectual and technical concepts contained
 # herein are proprietary to Adobe Systems Incorporated and its
 # suppliers and are protected by trade secret or copyright law.
 # Dissemination of this information or reproduction of this material
 # is strictly forbidden unless prior written permission is obtained
 # from Adobe Systems Incorporated.
 #*************************************************************************/

@prefix core: <http://ns.adobe.com/adobecloud/core/1.0/> .
@prefix meta: <http://ns.adobe.com/adobecloud/meta/1.0/> .
@prefix xmpMM: <http://ns.adobe.com/xap/1.0/mm/> .
@prefix xmpDM: <http://ns.adobe.com/xmp/1.0/DynamicMedia/> .
@prefix xmpRights: <http://ns.adobe.com/xap/1.0/rights/> .
@prefix xmpTPg: <http://ns.adobe.com/xap/1.0/t/pg/> .
@prefix xmp: <http://ns.adobe.com/xap/1.0/> .
@prefix stDim: <http://ns.adobe.com/xap/1.0/sType/Dimensions#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace/> .
@prefix photoshop: <http://ns.adobe.com/photoshop/1.0/> .
@prefix tiff: <http://ns.adobe.com/tiff/1.0/> .
@prefix plus: <http://ns.useplus.org/ldf/xmp/1.0/> .
@prefix cc:  <http://creativecommons.org/ns#> .
@prefix stEvt: <http://ns.adobe.com/xap/1.0/sType/ResourceEvent#> .
@prefix stFnt: <http:ns.adobe.com/xap/1.0/sType/Font#> .
@prefix stLayer: <http://ns.adobe.com/core/1.0/sType/Layer#> .
@prefix stLayerGroup: <http://ns.adobe.com/core/1.0/sType/LayerGroup#> .
@prefix stArtboard: <http://ns.adobe.com/core/1.0/sType/Artboard#> .
@prefix exif: <http://ns.adobe.com/exif/1.0/#> .

<http://ns.adobe.com/adobecloud/core/1.0/> a owl:Ontology ;
  dc:title "Adobe Cloud Core Asset Data Model" ;
  rdfs:comment "An RDF Schema for the Adobe Cloud Core Asset Data Model" .

# RDF-compatible XSD types used in this schema, defined for documentation purposes (see https://www.w3.org/TR/rdf11-concepts/#xsd-datatypes)

xsd:string a rdfs:Datatype ;
  rdfs:label "String" ;
  rdfs:comment "Character strings (but not all Unicode character strings)" ;
  rdfs:seeAlso <https://www.w3.org/TR/rdf11-concepts/#xsd-datatypes> .

xsd:boolean a rdfs:Datatype ;
  rdfs:label "Boolean" ;
  rdfs:comment "true, false" ;
  rdfs:seeAlso <https://www.w3.org/TR/rdf11-concepts/#xsd-datatypes> ;
  owl:withRestrictions (
    [
      xsd:pattern "(true|false)"
    ]
  ) .

xsd:decimal a rdfs:Datatype ;
  rdfs:label "Decimal" ;
  rdfs:comment "Arbitrary-precision decimal numbers" ;
  rdfs:seeAlso <https://www.w3.org/TR/rdf11-concepts/#xsd-datatypes> ;
  owl:withRestrictions (
    [
      xsd:pattern "[+-]?[0-9]*\\.?[0-9]*"
    ]
  ) .

xsd:integer a rdfs:Datatype ;
  rdfs:label "Integer" ;
  rdfs:comment "Arbitrary-size integer numbers" ;
  owl:onDatatype xsd:decimal ;
  rdfs:seeAlso <https://www.w3.org/TR/rdf11-concepts/#xsd-datatypes> ;
  owl:withRestrictions (
    [
      xsd:pattern "[-+]?[0-9]+"
    ] [
      xsd:fractionDigits 0
    ]
  ) .

xsd:double a rdfs:Datatype ;
  rdfs:label "Double" ;
  rdfs:comment "64-bit floating point numbers incl. ±Inf, ±0, NaN" ;
  rdfs:seeAlso <https://www.w3.org/TR/rdf11-concepts/#xsd-datatypes> ;
  owl:withRestrictions (
    [
      xsd:pattern "[+-]?[0-9]*\\.?[0-9]*([eE][-+]?[0-9]+)"
    ]
  ) .

xsd:float a rdfs:Datatype ;
  rdfs:label "Float" ;
  rdfs:comment "32-bit floating point numbers incl. ±Inf, ±0, NaN" ;
  rdfs:seeAlso <https://www.w3.org/TR/rdf11-concepts/#xsd-datatypes> ;
  owl:onDatatype xsd:double .

xsd:date a rdfs:Datatype ;
  rdfs:label "Date" ;
  rdfs:comment "Dates (yyyy-mm-dd) with or without timezone" ;
  rdfs:seeAlso <https://www.w3.org/TR/rdf11-concepts/#xsd-datatypes> ;
  owl:withRestrictions (
    [
      xsd:pattern "-?[0-9][0-9][0-9][0-9]([0-9]*)?-(0[1-9]|1[0-1])-([0-3][1-9])([+-][0-1][0-9]:[0-6][0-9])?"
    ]
  ) .

xsd:time a rdfs:Datatype ;
  rdfs:label "Time" ;
  rdfs:comment "Times (hh:mm:ss.sss…) with or without timezone" ;
  rdfs:seeAlso <https://www.w3.org/TR/rdf11-concepts/#xsd-datatypes> ;
  owl:withRestrictions (
    [
      xsd:pattern "[1-2][0-9]:[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]"
    ]
  ) .

xsd:dateTime a rdfs:Datatype ;
  rdfs:label "Date Time" ;
  rdfs:seeAlso <https://www.w3.org/TR/rdf11-concepts/#xsd-datatypes> ;
  rdfs:comment "Date and time with or without timezone" .

xsd:dateTimeStamp a rdfs:Datatype ;
  rdfs:label "Date Time Stamp" ;
  rdfs:seeAlso <https://www.w3.org/TR/rdf11-concepts/#xsd-datatypes> ;
  rdfs:comment "Date and time with required timezone" .

# derived data types

xml:lang a rdfs:Datatype ;
  owl:onDatatype xsd:string ;
  rdfs:comment """Language string as defined in IETF RFC 3066""" ;
  rdfs:seeAlso <https://www.ietf.org/rfc/rfc3066.txt> ;
  skos:example "DE-de" .

xmp:Text a rdfs:Datatype ;
  rdfs:label "Text"@en ;
  owl:onDatatype xsd:string ;
  rdfs:comment """A possibly empty Unicode string""" .

xmp:MIMEType a rdfs:Datatype ;
  rdfs:label "MIME Type"@en ;
  owl:onDatatype xmp:Text ;
  rdfs:seeAlso <https://www.ietf.org/rfc/rfc2046.txt> ;
  skos:example "image/png" ;
  rdfs:comment """A simple text value denoting a digital file format as defined in IETF RFC 2046.""" .

xmp:AgentName a rdfs:Datatype ;
  rdfs:label "Agent Name"@en ;
  owl:onDatatype xmp:Text ;
  rdfs:comment """The name of an XMP processor, a Text value.
It is recommended that the value use this format convention:
Organization Software_name Version (token;token;...)
- Organization: The name of the company or organization providing the software, no SPACEs.
- Software_name: The full name of the software, SPACEs allowed.
- version: The version of the software, no SPACEs.
- tokens: Can be used to identify an operating system, plug-in, or more detailed version information.""" .

xmp:GUID a rdfs:Datatype ;
  rdfs:label "GUID"@en ;
  owl:onDatatype xsd:string ;
  rdfs:comment """A string representing a “globally unique identifier”""" .

xmp:ProperName a rdfs:Datatype ;
  rdfs:label "Proper Name"@en ;
  owl:onDatatype xsd:string ;
  rdfs:comment """A simple text value denoting the name of a person or organization.""" .

core:URI a rdfs:Datatype ;
  rdfs:label "URI"@en ;
  owl:onDatatype xsd:string ;
  rdfs:seeAlso <https://www.ietf.org/rfc/rfc3986.txt> ;
  skos:example "https://www.adobe.io" ;
  rdfs:comment """A string representing URI as defined in IETF RFC 3986.""" .

# @trieloff covered
# tiff:OrientationMode a rdfs:Datatype ;
#   rdfs:label "Orientation Mode"@en ;
#   rdfs:comment """Orientation of the asset. Closed choice of integer:
# 1 = Horizontal (normal)
# 2 = Mirror horizontal
# 3 = Rotate 180
# 4 = Mirror vertical
# 5 = Mirror horizontal and rotate 270 CW
# 6 = Rotate 90 CW
# 7 = Mirror horizontal and rotate 90 CW
# 8 = Rotate 270 CW""" ;
#   owl:withRestrictions (
#     [
#       xsd:pattern "^[1-8]?$"
#     ]
#   ) .

tiff:ResolutionUnitChoice  a rdfs:Datatype ;
  rdfs:label "Resolution Unit Choice"@en ;
  rdfs:comment """Unit choice for measuring resolution. Closed choice of integer:
2 = inches
3 = centimeters""" ;
  owl:withRestrictions (
    [
      xsd:pattern "^[2-3]?$"
    ]
  ) .

photoshop:ColorModeChoice  a rdfs:Datatype ;
  rdfs:label "Color Mode Choice"@en ;
  rdfs:comment """Color mode. Closed choice of integer:
0 = Bitmap
1 = Gray scale
2 = Indexed color
3 = RGB color
4 = CMYK color
7 = Multi-channel
8 = Duotone
9 = LAB color""" ;
  owl:withRestrictions (
    [
      xsd:pattern "^[0-9]?$"
    ]
  ) .

exif:GPSCoordinate a rdfs:Datatype ;
  rdfs:label "GPS Coordinate"@en ;
  owl:onDatatype xsd:string ;
  rdfs:comment """A Text value in the form “DDD,MM,SSk” or “DDD,MM.mmk”, where:
* DDD is a number of degrees
* MM is a number of minutes
* SS is a number of seconds
* mm is a fraction of minutes
* k is a single character N, S, E, or W indicating a direction (north, south, east, west)
Leading zeros are not necessary for the for DDD, MM, and SS values. The DDD,MM.mmk form should be used when any of the native Exif component rational values has a denominator other than 1. There can be any number of fractional digits.""" .

# structures and auxiliary types/constructs

## structure for defining AliasID

core:AliasID a rdfs:Class ;
  rdfs:label "Alias ID"@en ;
  rdfs:comment """A class representing an Alias ID structure with id and system properties""" ;
  rdfs:subClassOf rdfs:Resource .

core:externalSystem a rdf:Property ;
  rdfs:label "external System"@en ;
  rdfs:range xsd:string ;
  rdfs:domain core:AliasID ;
  rdfs:comment """A string used to identify the external systems like google, facebook etc.""" .

core:externalID a rdf:Property ;
  rdfs:label "ID"@en ;
  rdfs:range xsd:string ;
  rdfs:domain core:AliasID ;
  rdfs:comment """An Id under which external systems track the asset.""" .

## structure for defining CopyrightOwnerDetail

plus:CopyrightOwnerDetail a rdfs:Class ;
  rdfs:label "Copyright Owner Detail"@en ;
  rdfs:comment """Contains properties that provide for a Copyright Owner.""" ;
  rdfs:subClassOf rdfs:Resource .

plus:OwnerID a rdf:Property ;
  rdfs:label "Copyright Owner ID"@en ;
  rdfs:range xmp:Text ;
  rdfs:domain plus:CopyrightOwnerDetail ;
  rdfs:comment """ID of the copyright owner. If the PLUS-ID being stored in this property is registered with the PLUS Coalition, it should be expressed as a URL. For example: http://plus-id.org/PLUS-ID.""" .

plus:OwnerName a rdf:Property ;
  rdfs:label "Copyright Owner name"@en ;
  rdfs:range xmp:ProperName ;
  rdfs:domain plus:CopyrightOwnerDetail ;
  rdfs:comment """Name of the copyright owner.""" .

## structure for defining MilestoneInfo

core:MilestoneInfo a rdfs:Class ;
  rdfs:label "Milestone Info"@en ;
  rdfs:comment """A structure containing information about version of an asset.""" ;
  rdfs:subClassOf rdfs:Resource .

core:MilestoneLabel a rdf:Property ;
  rdfs:label "Milestone Label"@en ;
  rdfs:range xsd:string ;
  rdfs:domain core:MilestoneInfo ;
  rdfs:comment """Label for the version of an asset""" .

core:MilestoneDescription a rdf:Property ;
  rdfs:label "Milestone Description"@en ;
  rdfs:range xsd:string ;
  rdfs:domain core:MilestoneInfo ;
  rdfs:comment """Description for the version of an asset""" .

## structure for defining Dimensions as per XMP spec

xmp:Dimensions a rdfs:Class ;
  rdfs:label "Dimensions"@en ;
  rdfs:comment "A structure containing dimensions for a drawn object." ;
  rdfs:subClassOf rdfs:Resource .

stDim:h a rdf:Property ;
  rdfs:label "Height"@en ;
  rdfs:comment "Height magnitude" ;
  rdfs:domain xmp:Dimensions ;
  rdfs:range xsd:float .

stDim:w a rdf:Property ;
  rdfs:label "Width"@en ;
  rdfs:comment "Width magnitude" ;
  rdfs:domain xmp:Dimensions ;
  rdfs:range xsd:float .

stDim:unit a rdf:Property ;
  rdfs:label "Units"@en ;
  rdfs:comment "Units. For example: inch, mm, pixel, pica, point" ;
  rdfs:domain xmp:Dimensions ;
  rdfs:range xsd:string .

## structure for defining Rational as per XMP spec

tiff:Rational a rdfs:Class ;
  rdfs:label "Rational"@en ;
  rdfs:comment """A class representing Rational values.""" ;
  rdfs:subClassOf rdfs:Resource .

tiff:numerator a rdf:Property ;
  rdfs:range xsd:integer ;
  rdfs:domain tiff:Rational ;
  rdfs:comment """A value representing numerator part of a rational.""" .

tiff:denominator a rdf:Property ;
  rdfs:range xsd:integer ;
  rdfs:domain tiff:Rational ;
  rdfs:comment """A value representing denominator part of a rational.""" ;
  owl:withRestrictions (
    [
      xsd:pattern "[-+]?[1-9]+"
    ] [
      xsd:fractionDigits 0
    ]
  ) .

## structure of keywords property

core:stKeyword a rdfs:Class ;
  rdfs:label "Keyword"@en ;
  rdfs:comment """The list of keywords describing the asset. Values of the `stKeyword` property have been applied by a human reviewer.""" ;
  rdfs:subClassOf rdfs:Resource .

core:value a rdf:Property ;
  rdfs:label "value"@en ;
  rdfs:range xsd:string ;
  rdfs:domain core:stKeyword ;
  rdfs:comment """The keyword itself. A keyword can be considered like a tag, i.e. a short description of the content of the asset.""" ;
  meta:mandatory true ;
  meta:jsonName "value" .

core:localecode a rdf:Property ;
  rdfs:label "locale Code"@en ;
  rdfs:range xsd:string ;
  rdfs:domain core:stKeyword ;
  rdfs:comment """Language of the keyword. The locale code should follow RFC BCP 47""" ;
  rdfs:seeAlso <https://tools.ietf.org/html/bcp47> ;
  skos:example "en-US" ;
  meta:mandatory false ;
  meta:jsonName "locale_code" .

core:importance a rdf:Property ;
  rdfs:label "importance"@en ;
  rdfs:range xsd:float ;
  rdfs:domain core:stKeyword ;
  rdfs:comment """The importance of the keyword on a scale from zero to one. If required repository will infer it as per its policies and add it for the keywords""" ;
  meta:mandatory false ;
  meta:jsonName "importance" ;
  owl:withRestrictions (
    [
      xsd:minInclusive +0.0
    ] [
       xsd:maxInclusive +1.0
     ]
   ) .

## structure of machine keywords property

core:stMachineKeyword a rdfs:Class ;
  rdfs:label "Machine Keyword"@en ;
  rdfs:comment """The list of machine-inferred keywords describing the asset. Values of the `stMachineKeyword` property have been applied by a machine and do not require a human reviewer.""" ;
  rdfs:subClassOf rdfs:Resource .

core:value a rdf:Property ;
  rdfs:label "value"@en ;
  rdfs:range xsd:string ;
  rdfs:domain core:stMachineKeyword ;
  rdfs:comment """The keyword itself. A keyword can be considered like a tag, i.e. a short description of the content of the asset.""" ;
  meta:mandatory true ;
  meta:jsonName "value" .

core:localecode a rdf:Property ;
  rdfs:label "locale Code"@en ;
  rdfs:range xsd:string ;
  rdfs:domain core:stMachineKeyword ;
  rdfs:comment """Language of the keyword. The locale code should follow RFC BCP47""" ;
  rdfs:seeAlso <https://tools.ietf.org/html/bcp47> ;
  skos:example "de-CH" ;
  meta:mandatory false ;
  meta:jsonName "locale_code" .

core:confidence a rdf:Property ;
  rdfs:label "confidence"@en ;
  rdfs:range xsd:float ;
  rdfs:domain core:stMachineKeyword ;
  rdfs:comment """Confidence of the algorithm that this keyword is applicable to the asset. Confidence values are numbers between zero and one. A value of .95 indicates that the algorithm expects less than 5% of all tags with the same confidence value to be mis-applied, i.e. not to be a proper description of the asset.""" ;
  meta:mandatory false ;
  meta:jsonName "confidence" ;
  owl:withRestrictions (
    [
      xsd:minInclusive +0.0
    ] [
       xsd:maxInclusive +1.0
     ]
   ) .

core:algorithm a rdf:Property ;
  rdfs:label "algorithm"@en ;
  rdfs:range xsd:string ;
  rdfs:domain core:stMachineKeyword ;
  rdfs:comment """Name of the algorithm which generated the keyword.""" ;
  meta:mandatory false ;
  meta:jsonName "algorithm" .

## container type and auxiliary structure for defining LanguageAlternative as per XMP spec

core:LanguageAlternativeDetail a rdfs:Class ;
  rdfs:subClassOf rdfs:Resource .

core:LanguageAlternativeText a rdf:Property ;
  rdfs:range xsd:string ;
  rdfs:domain core:LanguageAlternativeDetail .

core:LanguageAlternativeLang a rdf:Property ;
  rdfs:range xml:lang ;
  rdfs:domain core:LanguageAlternativeDetail .

xmp:LanguageAlternative a rdfs:Class ;
  rdfs:label "Locale Struct"@en ;
  rdfs:comment "An alternative array of simple text items. Language alternatives facilitate the selection of a simple text item based on a desired language." ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdf:first ;
    owl:allValuesFrom core:LanguageAlternativeDetail ;
  ] ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdf:rest ;
    owl:allValuesFrom xmp:LanguageAlternative ;
  ] ;
  rdfs:subClassOf rdf:List .

## structure for defining ResourceEvent as per XMP spec

xmp:ResourceEvent a rdfs:Class ;
  rdfs:label "Resource Event"@en ;
  rdfs:comment """A structure denoting a high-level event that occurred in the processing of a resource.""" ;
  rdfs:subClassOf rdfs:Resource .

stEvt:action a rdf:Property ;
  rdfs:range xmp:Text ;
  rdfs:domain xmp:ResourceEvent ;
  rdfs:comment """The action that occurred. Defined values are: converted,copied, created, cropped, edited, filtered, formatted,version_updated, printed, published, managed, produced,resized, saved.New values should be verbs in the past tense.""" .

stEvt:changed a rdf:Property ;
  rdfs:range xmp:Text ;
  rdfs:domain xmp:ResourceEvent ;
  rdfs:comment """A semicolon-delimited list of the parts of the resource that were changed since the previous event history.If not present, presumed to be undefined. When tracking changes and the scope of the changed components is unknown, it should be assumed that anything might have changed.""" .

stEvt:instanceID a rdf:Property ;
  rdfs:range xmp:GUID ;
  rdfs:domain xmp:ResourceEvent ;
  rdfs:comment """The value of the xmpMM:InstanceID property for the modified(output) resource.""" .

stEvt:parameters a rdf:Property ;
  rdfs:range xmp:Text ;
  rdfs:domain xmp:ResourceEvent ;
  rdfs:comment """Additional description of the action.""" .

stEvt:softwareAgent a rdf:Property ;
  rdfs:range xmp:AgentName ;
  rdfs:domain xmp:ResourceEvent ;
  rdfs:comment """The software agent that performed the action.""" .

stEvt:when a rdf:Property ;
  rdfs:range xsd:dateTime ;
  rdfs:domain xmp:ResourceEvent ;
  rdfs:comment """Timestamp of when the action occurred.For events that create or write to a file, this should be the approximate modification time of the file.""" .
  
## structure for defining Font

xmp:Font a rdfs:Class ;
  rdfs:label "Font"@en ;
  rdfs:comment """Structure containing the characteristics of a font used in a document.""" ;
  rdfs:subClassOf rdfs:Resource .
  
stFnt:childFontFiles a rdf:Property ;
  rdfs:range core:StringList ;
  rdfs:domain xmp:Font ;
  rdfs:comment """The list of file names for the fonts that make up a composite font.""" ;
  meta:mandatory false ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "child_font_files" .

stFnt:composite a rdf:Property ;
  rdfs:range xsd:boolean ;
  rdfs:domain xmp:Font ;
  rdfs:comment """When true, this is a composite font.""" ;
  meta:mandatory false ;
  meta:userEditable false ;
  meta:immutable false ;  
  meta:jsonName "composite" .

stFnt:fontFace a rdf:Property ;
  rdfs:range xmp:Text ;
  rdfs:domain xmp:Font ;
  rdfs:comment """The name of the typeface, i.e. the specific weight or instance of the fontFamily. For ex: Bold, Italic""" ;
  meta:mandatory false ;
  meta:userEditable false ;
  meta:immutable false ;  
  meta:jsonName "font_face" .

stFnt:fontFamily a rdf:Property ;
  rdfs:range xmp:Text ;
  rdfs:domain xmp:Font ;
  rdfs:comment """Complete collection of typefaces in different weights and classifications, but having the same point size, and designed to work together. For example, a Times Roman font family may include Times Roman Bold, Times Roman Extra Bold, Times Roman Italic, Times Roman Bold Italic, Times Roman Condensed, etc., all in the same size.""" ;
  meta:mandatory false ;
  meta:userEditable false ;
  meta:immutable false ;  
  meta:jsonName "font_family" .
  
stFnt:fontFileName a rdf:Property ;
  rdfs:range xsd:string ;
  rdfs:domain xmp:Font ;
  rdfs:comment """The font file name (not a complete path). For example: `Times New Roman.otf`. Some products are not storing file extension information. XMP spec is open about specifics of the file name. If font information is stored in multiple files, use the semicolon separator to store file names. For example: `zx___.mmm; zx__.pfm`""" ;
  skos:example "zx___.mmm; zx__.pfm" ;
  meta:mandatory false ;
  meta:userEditable false ;
  meta:immutable false ;  
  meta:jsonName "font_file_name" .

stFnt:fontName a rdf:Property ;
  rdfs:range xmp:Text ;
  rdfs:domain xmp:Font ;
  rdfs:comment """PostScript name of the font. For example: TimesNewRomanPS-BoldItalicMT """ ;
  meta:mandatory true ;
  meta:userEditable false ;
  meta:immutable false ;  
  meta:jsonName "font_name" ;
  skos:note """fontName is manadatory to identify the font used in an asset but an asset may not have a font property if it has only images/vector arts (no text).""" .
  
stFnt:fontType a rdf:Property ;
  rdfs:range xmp:Text ;
  rdfs:domain xmp:Font ;
  rdfs:comment """The font type, such as TrueType, Type 1, OpenType, and so on.""" ;   
  meta:mandatory true ;
  meta:userEditable false ;
  meta:immutable false ;  
  meta:jsonName "font_type" ;
  skos:note """fontType is manadatory to identify font category but an asset may not have a font property if it has only images/vector arts (no text).""" .

stFnt:versionString a rdf:Property ;
  rdfs:range xsd:string ;
  rdfs:domain xmp:Font ;
  rdfs:comment """The version string: 
  -version for Type1 fonts
  -nameId 5 for Apple TrueType and OpenType
  -CIDFontVersion for CID fonts
  -The empty string for bitmap fonts
  The Adobe CoolType font engine allows two fonts with the same PostScript name and different technologies to be used at the same time, but not if they are from different versions. So even without this data for a given document you will have unique font data. However, the version can tell you if the font has changed metrics, glyph forms or other important information. This is useful for comparing fonts in two documents or fonts in a document to those in your system.
  For example: TimesNewRomanPS-BoldItalicMTVersion 3.05 """ ;
  meta:mandatory false ;
  meta:userEditable false ;
  meta:immutable false ;  
  meta:jsonName "version_string" .

## structure for defining Layer

core:Layer a rdfs:Class ;
  rdfs:label "Layer"@en ;
  rdfs:comment """Structure denoting layer information in the document. Layers are like stacked sheets. User can add transparency/opacity to see through transparent areas of a layer. They are used for compositing multiple images, adding text to an image, or adding vector graphic shapes. Users can also apply layer style to add a special effect such as a drop shadow or a glow. """ ;
  rdfs:subClassOf rdfs:Resource .
  
stLayer:type a rdf:Property ;
  rdfs:range xsd:string ;
  rdfs:domain core:Layer ;
  rdfs:comment """Closed choice of ("Layer", "LayerGroup") - will have "Layer" if stLayer structure is active.""";
  meta:mandatory true ;
  meta:userEditable false ;
  meta:immutable true ;
  meta:jsonName "type" .

stLayer:name a rdf:Property ;
  rdfs:range xsd:string ;
  rdfs:domain core:Layer ;
  rdfs:comment """Name of Layer. This would be visible to the user and users can specify names that can help them uniquely identfiy different Layers""" ;
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "name" .

  stLayer:visible a rdf:Property ;
  rdfs:range xsd:boolean ;
  rdfs:domain core:Layer ;
  rdfs:comment """Indicates if layer is visible in document. visible = true - Layer is visible and false - Layer is hidden (Visibility can be toggled by clicking "eye" icon in PS against each layer)""" ;
  meta:mandatory true ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "visible" .

stLayer:style a rdf:Property ;
  rdfs:range xsd:string ;
  rdfs:domain core:Layer ;
  rdfs:comment """A layer style is one or more effects applied to a layer or layer group. You can apply one of the preset styles provided with Photoshop or create a custom style. Photoshop provides a variety of effects—such as shadows, glows, and bevels—that change the appearance of a layer’s contents in a non-distructive way. Layer effects are linked to the layer contents. When you move or edit the contents of the layer, the same effects are applied to the modified contents. For example, if you apply a drop shadow to a text layer and then add new text, the shadow is added automatically to the new text.""" ;
  meta:mandatory false ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "style" .

stLayer:originX a rdf:Property ;
  rdfs:range xsd:integer ;
  rdfs:domain core:Layer ;
  rdfs:comment """Origin X position - Base system is cartesian, relative to master page and origin in top, left (X increasing to right, Y increasing downwards)""" ;
  meta:mandatory true ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "origin_x" .

stLayer:originY a rdf:Property ;
  rdfs:range xsd:integer ;
  rdfs:domain core:Layer ;
  rdfs:comment """Origin Y position - Base system is cartesian, relative to master page and origin in top, left (X increasing to right, Y increasing downwards) """ ;
  meta:mandatory true ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "origin_y" .

stLayer:width a rdf:Property ;
  rdfs:range xsd:integer ;
  rdfs:domain core:Layer ;
  rdfs:comment """Width of layer """ ;
  meta:mandatory true ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "width" .

stLayer:height a rdf:Property ;
  rdfs:range xsd:integer ;
  rdfs:domain core:Layer ;
  rdfs:comment """Height of layer """ ;
  meta:mandatory true ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "height" .

stLayer:unit a rdf:Property ;
  rdfs:range xsd:String ;
  rdfs:domain core:Layer ;
  rdfs:comment """Unit used for layer coordinates (origingX, originY, width and height). For example: inch, mm, pixel, pica, point (default is pixels)""" ;
  meta:mandatory false ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "unit" .

## structure for defining LayerGroup

core:LayerGroup a rdfs:Class ;
  rdfs:label "Layer Group"@en ;
  rdfs:comment """Layer group helps in preserving the hierarchy of layers in a document. User can apply common style to the group instead of working at individual layers. Layer Group can contain layers/layer groups. A structure denoting layer group information in the document.""" ;
  rdfs:subClassOf rdfs:Resource .
  
stLayerGroup:type a rdf:Property ;
  rdfs:range xsd:string ;
  rdfs:domain core:LayerGroup ;
  rdfs:comment """Closed choice of ("Layer", "LayerGroup") - will have "LayerGroup" if stLayerGroup structure is active.""";
  meta:mandatory true ;
  meta:userEditable false ;
  meta:immutable true ;
  meta:jsonName "type" .

stLayerGroup:name a rdf:Property ;
  rdfs:range xsd:string ;
  rdfs:domain core:LayerGroup ;
  rdfs:comment """Name of LayerGroup. This would be visible to the user and users can specify name that can help them uniquely identfiy different Layer Groups""" ; 
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "name" .

stLayerGroup:layers a rdf:Property ;
  rdfs:range xsd:string ;
  rdfs:domain core:LayerGroup ;
  rdfs:comment """List of layers/layer groups in a layer group""" ;
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "layers" .

## structure for defining Artboards

core:Artboard a rdfs:Class ;
  rdfs:label "Artboard"@en ;
  rdfs:comment """Structure containing the characteristics of an Artboard used in a document. An artboard contains areas of your artwork that can be printed or exported. 
  Documents created in Adobe Illustrator and Adobe XD can have multiple Artboards. 
  For Adobe Photoshop users, it's a special type of layer group which clips the contents of  contained elements to its boundaries. Objects outside Artboard area will not be visible
  For more details, refer to: https://helpx.adobe.com/illustrator/how-to/visual-dictionary-artboard.html""" ;
  rdfs:subClassOf rdfs:Resource .
  
stArtboard:name a rdf:Property ;
  rdfs:range xsd:string ;
  rdfs:domain core:Artboard ;
  rdfs:comment """Name of the artboard. This would be visible to the user and users can specify names that can help them uniquely identfiy different Artboards.""" ;
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "name" .

stArtboard:originX a rdf:Property ;
  rdfs:range xsd:integer ;
  rdfs:domain core:Artboard ;
  rdfs:comment """Origin X position - Base system is cartesian, relative to master page and origin in top, left (X increasing to right, Y increasing downwards)""" ;
  meta:mandatory true ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "origin_x" .

stArtboard:originY a rdf:Property ;
  rdfs:range xsd:integer ;
  rdfs:domain core:Artboard ;
  rdfs:comment """Origin Y position - Base system is cartesian, relative to master page and origin in top, left (X increasing to right, Y increasing downwards)""" ;
  meta:mandatory true ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "origin_y" .

stArtboard:width a rdf:Property ;
  rdfs:range xsd:integer ;
  rdfs:domain core:Artboard ;
  rdfs:comment """Width of the artboard""" ;
  meta:mandatory true ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "width" .

stArtboard:height a rdf:Property ;
  rdfs:range xsd:integer ;
  rdfs:domain core:Artboard ;
  rdfs:comment """Height of the artboard""" ;
  meta:mandatory true ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "height" .

stArtboard:unit a rdf:Property ;
  rdfs:range xsd:String ;
  rdfs:domain core:Artboard ;
  rdfs:comment """Unit used for artboard coordinates (originX, originY, width and height). For example: inch, mm, pixel, pica, point (default is pixels)""" ;
  meta:mandatory false ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "unit" .

## auxiliary container type for defining an array of ProperName as per XMP spec

core:ListOfProperNames a rdfs:Class ;
  rdfs:label "List of Proper Names"@en ;
  rdfs:comment "Ordered array of xmp:ProperName" ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdf:first ;
    owl:allValuesFrom xmp:ProperName ;
  ] ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdf:rest ;
    owl:allValuesFrom core:ListOfProperNames ;
  ] ;
  rdfs:subClassOf rdf:List .
  
## auxiliary container type for defining an array of xsd:string

core:StringList a rdfs:Class ;
  rdfs:label "String List"@en ;
  rdfs:comment "An ordered list of strings" ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdf:first ;
    owl:allValuesFrom xsd:string ;
  ] ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdf:rest ;
    owl:allValuesFrom core:StringList ;
  ] ;
  rdfs:subClassOf rdf:List .  

## auxiliary container type for defining an array of AliasID

core:ListOfAliasIDs a rdfs:Class ;
  rdfs:label "List of Alias IDs"@en ;
  rdfs:comment "Unordered array of AliasID" ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdf:first ;
    owl:allValuesFrom core:AliasID ;
  ] ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdf:rest ;
    owl:allValuesFrom core:ListOfAliasIDs ;
  ] ;
  rdfs:subClassOf rdf:List .

## auxilary container type for defining an array of Text elements

core:textSet a rdfs:Class ;
  rdfs:label "Text Set"@en ;
  rdfs:comment "Unordered set of Text elements" ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdf:first ;
    owl:allValuesFrom xmp:Text ;
  ] ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdf:rest ;
    owl:allValuesFrom core:textSet ;
  ] ;
  rdfs:subClassOf rdf:List .

## auxilary container type for defining an array of keywords

core:keywordSet a rdfs:Class ;
  rdfs:label "Keyword Set"@en ;
  rdfs:comment "Unordered set of keywords" ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdf:first ;
    owl:allValuesFrom core:stKeyword ;
  ] ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdf:rest ;
    owl:allValuesFrom core:keywordSet ;
  ] ;
  rdfs:subClassOf rdf:List .

## auxilary container type for defining an array of machine generated keywords

core:machineKeywordSet a rdfs:Class ;
  rdfs:label "Machine Keyword Set"@en ;
  rdfs:comment "Unordered set of machine keywords" ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdf:first ;
    owl:allValuesFrom core:stMachineKeyword ;
  ] ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdf:rest ;
    owl:allValuesFrom core:machineKeywordSet ;
  ] ;
  rdfs:subClassOf rdf:List .

## auxiliary container type for defining an array of Locales

core:ListOfLocales a rdfs:Class ;
  rdfs:label "List of Locales"@en ;
  rdfs:comment "Unordered set of locales" ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdf:first ;
    owl:allValuesFrom xml:lang ;
  ] ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdf:rest ;
    owl:allValuesFrom core:ListOfLocales ;
  ] ;
  rdfs:subClassOf rdf:List .  

## auxiliary container type for defining an array of CopyrightOwnerDetail

core:ListOfCopyrightOwners a rdfs:Class ;
  rdfs:label "List of Copyright Owners"@en ;
  rdfs:comment "Ordered list of plus:CopyrightOwnerDetail, having two fields: CopyrightOwnerId and CopyrightOwnerName" ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdf:first ;
    owl:allValuesFrom plus:CopyrightOwnerDetail ;
  ] ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdf:rest ;
    owl:allValuesFrom core:ListOfCopyrightOwners ;
  ] ;
  rdfs:subClassOf rdf:List .

## auxiliary container type for defining an array of ResourceEvent as per XMP spec

core:ResourceEventList a rdfs:Class ;
  rdfs:label "Resource Event List"@en ;
  rdfs:comment """Ordered list of xmp:ResourceEvent""" ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdf:first ;
    owl:allValuesFrom xmp:ResourceEvent ;
  ] ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdf:rest ;
    owl:allValuesFrom core:ResourceEventList ;
  ] ;
  rdfs:subClassOf rdf:List .

## auxiliary container type for defining an array of xap:stFnt

core:FontSet a rdfs:Class ;
  rdfs:label "Font Set"@en ;
  rdfs:comment "A set of fonts, order does not matter" ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdf:first ;
    owl:allValuesFrom xmp:Font ;
        owl:allValuesFrom core:FontSet ;
  ] ;
  rdfs:subClassOf rdf:List . 

## auxiliary container type for defining an array of Layer 

core:LayerList a rdfs:Class ;
  rdfs:label "Layer List"@en ;
  rdfs:comment "Ordered array of core:Layer/Core:LayerGroup used inside a document. " .
# Commented this out as it breaks the machinery also doesn't validate: https://github.com/IDLabResearch/TurtleValidator
#  rdfs:subClassOf [
#    a owl:Restriction ;
#    owl:onProperty rdf:first ;
#    # Not sure, what is the right way to use union to define collection of two different types - I'm trying to find this information
#    # will update it later
#    owl:unionOf rdf:parseType="Collection" ;
#    owl:class core:Layer ;
#    owl:class core:LayerGroup ;
#    skos:note "Not sure, what is the right way to use union to define collection of two different types - I'm trying to find this information
#    # will update it later" ; 
#    #owl:allValuesFrom core:Layer ;

## auxiliary container type for defining an Array of Artboards

core:ArtboardSet a rdfs:Class ;
  rdfs:label "Artboard Set"@en ;
  rdfs:comment "An unordered set of artboards. ArtboardSet helps in getting access to all artboards used in a document ";
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdf:first ;
    owl:allValuesFrom core:Artboard ;
  ] ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdf:rest ;
    owl:allValuesFrom core:ArtboardSet ;
  ] ;
  rdfs:subClassOf rdf:List .

# abstract base classes for schema classes and properties

core:BaseClass a rdfs:Class ;
  rdfs:label "Base Class"@en ;
  rdfs:comment "Base class of all Data Model Classes" ;
  rdfs:subClassOf rdfs:Resource .

core:BaseProperty a rdfs:Class ;
  rdfs:label "Base Property"@en ;
  rdfs:comment "Base class of all Data Model Properties" ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdfs:domain ;
    owl:hasValue core:BaseClass ;
  ] ;
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty rdfs:range ;
    owl:hasValue rdfs:Resource ;
  ] ;
  rdfs:subClassOf rdf:Property .

# schema definition vocabulary extensions

meta:jsonName a rdf:Property ;
  rdfs:label "JSON Name"@en ;
  rdfs:comment "Name of the property in JSON serialization" ;
  rdfs:domain core:BaseProperty ;
  rdfs:range xsd:string .

meta:immutable a rdf:Property ;
  rdfs:label "Immutable"@en ;
  rdfs:comment "resource property cannot be modified after resource creation" ;
  rdfs:domain core:BaseProperty ;
  rdfs:range xsd:boolean .

meta:userEditable a rdf:Property ;
  rdfs:label "User Editable"@en ;
  rdfs:comment "property can be modified by user" ;
  rdfs:domain core:BaseProperty ;
  skos:note "human users or user agents acting on behalf of them can edit this property." ;
  rdfs:range xsd:boolean .

meta:mandatory a rdf:Property ;
  rdfs:label "Mandatory"@en ;
  rdfs:comment "Mandatory in One Adobe Cloud APIs" ;
  rdfs:domain core:BaseProperty ;
  rdfs:range xsd:boolean .

### Asset class

core:Asset a rdfs:Class ;
  rdfs:label "Asset"@en ;
  rdfs:comment "A class for Digital Assets" ;
  rdfs:subClassOf core:BaseClass .

#### Property section: Asset Identity

core:assetID a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "Asset ID"@en ;
  rdfs:comment "A unique identifier given to every addressable asset in a given repository." ;
  rdfs:range xsd:string ;
  meta:mandatory true ;
  meta:userEditable false ;
  meta:immutable true ;
  meta:jsonName "asset_id" ;
  skos:note "urn:aaid:{system}:{id} - {format}:{namespace}:{system}:{id}" ;
  skos:example """“asset_id”:“urn:aaid:sc:US:6dc33479-13ca-4b19-b25d-c805eff8a69e”""" ;
  rdfs:domain core:Asset .

xmpMM:DocumentID a core:BaseProperty, owl:FunctionalProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:isDefinedBy <http://wwwimages.adobe.com/content/dam/Adobe/en/devnet/xmp/pdfs/XMP%20SDK%20Release%20cc-2014-12/XMPSpecificationPart1.pdf> ;
  rdfs:label "Document ID"@en ;
  rdfs:comment "It takes the value of xmpMM:DocumentID present in the XMP packet of the asset. For the assets having no XMP packet this property won't be populated." ;
  rdfs:range xmp:GUID ;
  meta:mandatory false ;
  meta:userEditable false ;
  meta:immutable true ;
  meta:jsonName "document_id" ;
  skos:note "" ;
  skos:example "uuid:d4546407-8e2c-4194-be3b-98ef79696e2c" ;
  rdfs:domain core:Asset .

core:assetName a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "Asset Name"@en ;
  rdfs:comment "Name of the asset in the repository. This could be a file name or any name provided by the repository to the asset." ;
  rdfs:range xsd:string ;
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "name" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

core:aliasIDs a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "Alias IDs"@en ;
  rdfs:comment "List of IDs under which external systems track the asset. Example of external systems : google, facebook etc." ;
  rdfs:range core:ListOfAliasIDs ;
  meta:jsonName "alias_ids" ;
  meta:mandatory false ;
  meta:userEditable false ;
  meta:immutable false ;
  skos:note """[{"external_system": "facebook", "external_id": "000A1C004EAE74B70A490D05"},...]""" ;
  skos:example "" ;
  rdfs:domain core:Asset .

#### Property section: Asset Creation

xmp:CreateDate a core:BaseProperty, owl:FunctionalProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:isDefinedBy <http://wwwimages.adobe.com/content/dam/Adobe/en/devnet/xmp/pdfs/XMP%20SDK%20Release%20cc-2014-12/XMPSpecificationPart1.pdf> ;
  rdfs:label "Date Created"@en ;
  rdfs:comment "The date and time the resource was created. It will be taken from within the asset." ;
  rdfs:range xsd:dateTime ;
  meta:mandatory true ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "create_date" ;
  skos:note """YYYY
YYYY-MM
YYYY-MM-DD
YYYY-MM-DDThh:mmTZD
YYYY-MM-DDThh:mm:ssTZD
YYYY-MM-DDThh:mm:ss.sTZD""" ;
  skos:example "1600" ;
  rdfs:domain core:Asset .

core:repositoryCreatedDate a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "Date created in repository"@en ;
  rdfs:comment """The server date and time when the resource was created in the repository, such as when an asset file is first uploaded or a directory is created by the server as the parent of a new asset. The Date Time property should conform to ISO 8601 standard. An example form is "2004-10-23T12:00:00-06:00".""" ;
  rdfs:range xsd:dateTime ;
  meta:mandatory true ;
  meta:userEditable false ;
  meta:immutable true ;
  meta:jsonName "repository_created_date" ;
  skos:note "YYYY-MM-DDThh:mm:ss.sTZD" ;
  skos:example "2016-07-12T12:13:05.123+01:00" ;
  rdfs:domain core:Asset .

dc:creator a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "Creator"@en ;
  rdfs:comment """An entity primarily responsible for making the resource. Examples of a creator include a person, an organization, or a service. Typically, the name of a creator should be used to indicate the entity.""" ;
  rdfs:range core:ListOfProperNames ;
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "creator" ;
  skos:note """XMP usage is a list of creators. Entities should be listed in order of decreasing precedence, if such order is significant.""" ;
  skos:example "" ;
  rdfs:domain core:Asset .

core:repositoryCreatedBy a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "Created in repository by"@en ;
  rdfs:comment "ID of the user who initiated the action that caused the resource to be created in the repository." ;
  rdfs:range xsd:string ;
  meta:mandatory true ;
  meta:userEditable false ;
  meta:immutable true ;
  meta:jsonName "repository_created_by" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

xmp:CreatorTool a core:BaseProperty, owl:FunctionalProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Creator tool"@en ;
  rdfs:comment "Name of the application which authored the asset. It takes the value present in xmp:CreatorTool property in XMP." ;
  rdfs:range xmp:AgentName ;
  meta:mandatory false ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "creator_tool" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

#### Property section: Asset Modification

xmp:ModifyDate a core:BaseProperty, owl:FunctionalProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Mofification Date"@en ;
  rdfs:comment """The date and time when asset was last modified. The Date Time property should conform to ISO 8601 standard. An example form is "2004-10-23T12:00:00-06:00".""" ;
  rdfs:range xsd:dateTime ;
  meta:mandatory true ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "modify_date" ;
  skos:note """YYYY
YYYY-MM
YYYY-MM-DD
YYYY-MM-DDThh:mmTZD
YYYY-MM-DDThh:mm:ssTZD
YYYY-MM-DDThh:mm:ss.sTZD""" ;
  skos:example "" ;
  rdfs:domain core:Asset .

core:repositoryLastModifiedDate a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "Repository last modified date"@en ;
  rdfs:comment """The server date and time when the resource was most recently modified in the repository, such as when a new version of an asset is uploaded or a directory's child resource is added or removed. The Date Time property should conform to ISO 8601 standard. An example form is "2004-10-23T12:00:00-06:00".""" ;
  rdfs:range xsd:dateTime ;
  meta:mandatory true ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "repository_last_modified_date" ;
  skos:note """YYYY-MM-DDThh:mm:ss.sTZD""" ;
  skos:example "2004-10-23T12:00:00-06:00" ;
  rdfs:domain core:Asset .

core:repositoryLastModifiedBy a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "Repository last modified by"@en ;
  rdfs:comment "ID of the user who initiated the action that most recently caused the resource to be modified in the repository." ;
  rdfs:range xsd:string ;
  meta:mandatory true ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "repository_last_modified_by" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

core:versionID a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "Version ID"@en ;
  rdfs:comment "The version ID of the asset. It will be generated both on explicit and implicit save or upload." ;
  rdfs:range xsd:string ;
  meta:mandatory true ;
  meta:userEditable false ;
  meta:immutable true ;
  meta:jsonName "version_id" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

core:milestone a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "Milestone"@en ;
  rdfs:comment "A label given to a version of the asset." ;
  rdfs:range core:MilestoneInfo ;
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "milestone" ;
  skos:note """{
       "label": "Draft 1",
       "description": "Shared this one with Jerry"
      }""" ;
  skos:example "" ;
  rdfs:domain core:Asset .

#### Property section: Asset Legal Information

xmpRights:WebStatement a core:BaseProperty, owl:FunctionalProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Web statement"@en ;
  rdfs:comment "A Web URL for a statement of the ownership and usage rights for this resource. This is a normal (non-URI) simple value because of historical usage." ;
  rdfs:range xsd:string ;
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "web_statement" ;
  skos:note "This is a normal (non-URI) simple value because of historical usage" ;
  skos:example "http://creativecommons.org/licenses/by/4.0/" ;
  rdfs:domain core:Asset .

dc:rights a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "Rights"@en ;
  rdfs:comment """Information about rights held in and over the resource.
We can live without mentioning locale if only one entry is there. Default locale is en_us.
Locale codes should follow IETF BCP 47 standard.""" ;
  rdfs:range xmp:LanguageAlternative ;
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "rights" ;
  skos:note "XMP usage is a list of related resources." ;
  skos:example "" ;
  rdfs:domain core:Asset .

xmpRights:Marked a core:BaseProperty, owl:FunctionalProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Marked"@en ;
  rdfs:comment """When true, indicates that this is a rights-managed resource. When false, indicates that this is a public-domain resource. Omit if the state is unknown.""" ;
  rdfs:range xsd:boolean ;
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "marked" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

xmpRights:UsageTerms a core:BaseProperty, owl:FunctionalProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Usage Terms"@en ;
  rdfs:comment """A collection of text instructions on how a resource can be legally used, given in a variety of languages.""" ;
  rdfs:range xmp:LanguageAlternative ;
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "usage_terms" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

plus:CopyrightOwner a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "Copyright Owner"@en ;
  rdfs:comment """Owner or owners of the copyright in the licensed asset.""" ;
  rdfs:range core:ListOfCopyrightOwners ;
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "copyright_owner" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

photoshop:Credit a core:BaseProperty, owl:FunctionalProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Credit"@en ;
  rdfs:comment """Who should be credited when the asset is published.""" ;
  rdfs:range xsd:string ;
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "credit" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

cc:license a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "License"@en ;
  rdfs:comment """A license is a set of requests/permissions to users of a Work, e.g. a copyright license, the public domain, information for distributors.""" ;
  rdfs:range core:URI ;
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "license" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

cc:attributionURL a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "Attribution URL"@en ;
  rdfs:comment """For licenses that require attribution, such as some Creative Commons licenses, a URL that identifies the user to which a work should be attributed. When publishing to Behance, we link to the user's profile page.""" ;
  rdfs:range core:URI ;
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "attribution_url" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

cc:attributionName a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "Attribution Name"@en ;
  rdfs:comment """For licenses that require attribution, such as some Creative Commons licenses, the user to which a work is attributed. When publishing to Behance, this is taken from the user's Behance profile information.""" ;
  rdfs:range xsd:string ;
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "attribution_name" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

xmpMM:ManageUI a core:BaseProperty, owl:FunctionalProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Manage UI"@en ;
  rdfs:comment """A URI that can be used to access information about the managed resource through a web browser.""" ;
  rdfs:range core:URI ;
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "manage_ui" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

xmpMM:ManageTo a core:BaseProperty, owl:FunctionalProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Manage To"@en ;
  rdfs:comment """A URI identifying the managed resource to the asset management system; the presence of this property is the formal indication that this resource is managed. The form and content of this URI is private to the asset management system.""" ;
  rdfs:range core:URI ;
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "manage_to" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

xmpMM:History a core:BaseProperty, owl:FunctionalProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "History"@en ;
  rdfs:comment """High-level actions that resulted in this resource. It is intended to give human readers a description of the steps taken to make the changes from the previous version to this one. The list should be at an abstract level; it is not intended to be an exhaustive keystroke or other detailed history. The description should be sufficient for metadata management, as well as for workflow enhancement.""" ;
  rdfs:range core:ResourceEventList ;
  meta:mandatory false ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "history" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

plus:CopyrightOwnerID a core:BaseProperty, owl:FunctionalProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Copyright Owner ID"@en ;
  rdfs:comment """ID of the copyright owner.
If the PLUS-ID being stored in this property is registered with the PLUS Coalition, it should be expressed as a URL. For example: http://plus-id.org/PLUS-ID""" ;
  rdfs:range xmp:Text ;
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "copyright_owner_id" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

plus:CopyrightOwnerName a core:BaseProperty, owl:FunctionalProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Copyright Owner Name"@en ;
  rdfs:comment """Name of Copyright Owner.""" ;
  rdfs:range xmp:ProperName ;
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "copyright_owner_name" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

#### Property section: Asset Description

dc:title a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "Title"@en ;
  rdfs:comment """A name given to the resource. Typically, a Title will be a name by which the resource is formally known.""" ;
  rdfs:range xmp:LanguageAlternative ;
  meta:jsonName "title" ;
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  skos:note "XMP usage is a title or name, given in various languages" ;
  skos:example "" ;
  rdfs:domain core:Asset .

dc:description a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "Description"@en ;
  rdfs:comment """An account of the content of the resource. Description may include but is not limited to: an abstract, table of contents, reference to a graphical representation of content or a free-text account of the content.""" ;
  rdfs:range xmp:LanguageAlternative ;
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "description" ;
  skos:note "XMP usage is a list of textual descriptions of the content of the resource, given in various languages." ;
  skos:example "" ;
  rdfs:domain core:Asset .

core:notSafe a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "NSFW state"@en ;
  rdfs:comment "Indicates if the content is SFW (safe for work). Safe is value 0 or missing value. NSFW is value 1." ;
  rdfs:range xsd:float ;
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "not_safe" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

dc:format a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "Format"@en ;
  rdfs:comment """The physical or digital manifestation of the resource. Typically, Format may include the media-type or dimensions of the resource. Examples of dimensions include size and duration. Format may be used to determine the software, hardware or other equipment needed to display or operate the resource. Recommended best practice is to select a value from a controlled vocabulary (for example, the list of Internet Media Types [http://www.iana.org/ assignments/media-types/] defining computer media formats).""" ;
  rdfs:range xmp:MIMEType ;
  meta:mandatory true ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "type" ;
  skos:note "XMP usage is a MIME type. Dimensions would be stored using a media-specific property, beyond the scope of this document." ;
  skos:example """“type”:“application/vnd.adobe.photoshop”""" ;
  rdfs:domain core:Asset .

dc:language a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "Language"@en ;
  rdfs:comment """The language or languages of the resource.""" ;
  rdfs:range core:ListOfLocales ;
  meta:mandatory false ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "type" ;
  skos:note "XMP usage is a list of languages used in the content of the resource. Languages are specified in language code as defined in IETF RFC 3066. " ;
  rdfs:seeAlso <https://www.ietf.org/rfc/rfc3066.txt> ;
  skos:example "pt-BR" ;
  rdfs:domain core:Asset .

core:size a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "Size"@en ;
  rdfs:comment """Size of the asset in bytes""" ;
  rdfs:range xsd:integer ;
  meta:mandatory true ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "size" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

core:path a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "Path"@en ;
  rdfs:comment """Shows the hierarchy of the asset. The path semantics should be same as that defined in https://tools.ietf.org/html/rfc3986#section-3.3. In case a repository is not path based then it can return the information which will help in browsing. It could be just an asset id, or something like {catalog}/{id} in case of OZ.""" ;
  rdfs:range xsd:string ;
  meta:mandatory true ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "path" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

core:etag a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "ETAG"@en ;
  rdfs:comment """An  ETag is an HTTP response header returned by an HTTP/1.1 compliant web server used to determine change in content of a resource at a given URL. """ ;
  rdfs:range xsd:string ;
  meta:mandatory true ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "etag" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

xmpTPg:NPages a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "Number of pages"@en ;
  rdfs:comment """The number of pages in the document (including any in contained documents).""" ;
  rdfs:range xsd:integer ;
  meta:mandatory false ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "n_pages" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

exif:GPSAltitude a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "GPS Altitude"@en ;
  rdfs:comment """GPS tag 6, 0x06. Indicates altitude in meters.""" ;
  rdfs:range xsd:float ;
  meta:mandatory false ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "gps_altitude" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

exif:GPSAltitudeRef a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "GPS Altitude Ref"@en ;
  rdfs:comment """GPS tag 5, 0x5. Indicates whether the altitude is above or below sea level:
0 = Above sea level
1 = Below sea level""" ;
  rdfs:range xsd:integer ;
  meta:mandatory false ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "gps_altitude_ref" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

exif:GPSLatitude a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "GPS Latitude"@en ;
  rdfs:comment """GPS tag 2, 0x02 (position) and 1, 0x01 (North/South). Indicates latitude.""" ;
  rdfs:range exif:GPSCoordinate ;
  meta:mandatory false ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "gps_latitude" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

exif:GPSLongitude a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "GPS Longitude"@en ;
  rdfs:comment """GPS tag 4, 0x04 (position) and 3, 0x03 (East/West). Indicates longitude.""" ;
  rdfs:range exif:GPSCoordinate ;
  meta:mandatory false ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "gps_longitude" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .


xmp:Rating a core:BaseProperty, owl:FunctionalProperty ;
   rdfs:label "Rating"@en ;
   rdfs:comment """A user-assigned rating for this file. The value shall be -1 or in the range [0..5], where -1 indicates “rejected” and 0 indicates “unrated”. If xmp:Rating is not present, a value of 0 should be assumed. NOTE: Anticipated usage is for a typical “star rating” UI, with the addition of a notion of rejection.""" ;
   rdfs:range xsd:integer ;
   meta:mandatory false ;
   meta:userEditable false ;
   meta:immutable false ;
   meta:jsonName "rating" ;
   skos:note "EDITORIAL NOTE: the range (data type) should be an enum. Due to the upcoming change to json-schema I took a short-cut and made it integer. We fix it after the migration" ;
   skos:example "" ;
   rdfs:domain core:Asset .

dc:subject a core:BaseProperty, owl:FunctionalProperty ;
   rdfs:label "Subject"@en ;
   rdfs:comment """Set of descriptive phrases or keywords that describe the content of the resource. These keywords are part of the XMP metadata of the asset. Compare this with the `keyword` and `machineKeywords` properties, which provide more structure and context.""" ;
   rdfs:range core:textSet ;
   meta:mandatory false ;
   meta:userEditable true ;
   meta:immutable false ;
   meta:jsonName "subject" ;
   skos:note "" ;
   skos:example "" ;
   rdfs:domain core:Asset .
 
core:keywords a core:BaseProperty, owl:FunctionalProperty ;
   rdfs:label "Keywords"@en ;
   rdfs:comment """The `keywords` property is used to track human-assigned descriptive phrases like keywords or tags of an asset. Rather than a plan list of tags, it is a structured set of keywords, where keywords can have an explicit importance ranking and a locale. This allows the management of multi-lingual keywords for a given asset. For machine-generated keywords, use the `machineKeywords` property. """ ;
   rdfs:range core:keywordSet ;
   meta:mandatory false ;
   meta:userEditable true ;
   meta:immutable false ;
   meta:jsonName "keywords" ;
   skos:note "" ;
   skos:example "" ;
   rdfs:domain core:Asset .

core:machinekeywords a core:BaseProperty, owl:FunctionalProperty ;
   rdfs:label "Machine Keywords"@en ;
   rdfs:comment """The `machineKeywords` property is used to track machine-assigned descriptive phrases like keywords or tags of an asset. Rather than a plan list of tags, it is a structured set of keywords, where keywords can have an explicit confidence ranking and a locale. For human-defined keywords, use the `keywords` property. """ ;
   rdfs:range core:machineKeywordSet ;
   meta:mandatory false ;
   meta:userEditable false ;
   meta:immutable false ;
   meta:jsonName "machine_keywords" ;
   skos:note "" ;
   skos:example "" ;
   rdfs:domain core:Asset .

### Image class

core:Image a rdfs:Class ;
  rdfs:label "Image" ;
  rdfs:comment "The Image class is for raster image assets, e.g. JPEG, PNG, etc." ;
  rdfs:subClassOf core:Asset .

#### Image properties

# @trieloff covered
# tiff:Orientation a core:BaseProperty, owl:FunctionalProperty ;
#   # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
#   rdfs:label "Orientation"@en ;
#   rdfs:comment """The orientation of the image.""" ;
#   rdfs:range tiff:OrientationMode ;
#   meta:mandatory false ;
#   meta:userEditable false ;
#   meta:immutable false ;
#   meta:jsonName "orientation" ;
#   skos:note """1 = Horizontal (normal)
# 2 = Mirror horizontal
# 3 = Rotate 180
# 4 = Mirror vertical
# 5 = Mirror horizontal and rotate 270 CW
# 6 = Rotate 90 CW
# 7 = Mirror horizontal and rotate 90 CW
# 8 = Rotate 270 CW""" ;
#   skos:example "" ;
#   rdfs:domain core:Image .

# @trieloff covered
# tiff:XResolution a core:BaseProperty, owl:FunctionalProperty ;
#   # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
#   rdfs:label "X-Resolution"@en ;
#   rdfs:comment """Horizontal resolution in pixels per ResolutionUnit.""" ;
#   rdfs:range tiff:Rational ;
#   meta:mandatory false ;
#   meta:userEditable false ;
#   meta:immutable false ;
#   meta:jsonName "x_resolution" ;
#   skos:note "" ;
#   skos:example "" ;
#   rdfs:domain core:Image .

# tiff:YResolution a core:BaseProperty, owl:FunctionalProperty ;
#   # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
#   rdfs:label "Y-Resolution"@en ;
#   rdfs:comment """Vertical resolution in pixels per ResolutionUnit.""" ;
#   rdfs:range tiff:Rational ;
#   meta:mandatory false ;
#   meta:userEditable false ;
#   meta:immutable false ;
#   meta:jsonName "y_resolution" ;
#   skos:note "" ;
#   skos:example "" ;
#   rdfs:domain core:Image .

tiff:ResolutionUnit a core:BaseProperty, owl:FunctionalProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Resolution Unit"@en ;
  rdfs:comment """Unit used for XResolution and YResolution.""" ;
  rdfs:range tiff:ResolutionUnitChoice ;
  meta:mandatory false ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "resolution_unit" ;
  skos:note """2 = inches
3 = centimeters""" ;
  skos:example "" ;
  rdfs:domain core:Image .

core:numberOfPixels a core:BaseProperty, owl:FunctionalProperty ;
  rdfs:label "Number of Pixels"@en ;
  rdfs:comment "Total number of pixels" ;
  rdfs:range xsd:integer ;
  meta:mandatory false ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "numberOfPixels" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Image .

photoshop:ColorMode a core:BaseProperty, owl:FunctionalProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Color Mode"@en ;
  rdfs:comment """The color mode or image mode determines how colors combine based on the number of channels in a color model. Different color modes result in different levels of color detail and file size. For instance, use CMYK color mode for images in a full-color print brochure, and use RGB color mode for images in web or e-mail to reduce file size while maintaining color integrity.""" ;
  rdfs:range photoshop:ColorModeChoice ;
  meta:mandatory false ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "color_mode" ;
  skos:note """0 = Bitmap
1 = Gray scale
2 = Indexed color
3 = RGB color
4 = CMYK color
7 = Multi-channel
8 = Duotone
9 = LAB color""" ;
  skos:example "" ;
  rdfs:domain core:Image .


photoshop:ICCProfile a core:BaseProperty, owl:FunctionalProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "ICC Profile"@en ;
  rdfs:comment """The color profile, such as AppleRGB, AdobeRGB1998.""" ;
  rdfs:range xmp:Text ;
  meta:mandatory false ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "icc_profile" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Image .

# core:CCDoc class for Creative Cloud documents

#core:CCDoc a rdfs:Class ;
#  rdfs:label "CCDoc" ;
#  rdfs:comment "OneAdobe Cloud Documents Class, AI, ID, PSD, PDF, etc." ;
#  rdfs:subClassOf core:Asset .

#Using core:Asset class to store Font property until we decide a right place to group these together

core:Fonts a core:BaseProperty, owl:FunctionalProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Fonts"@en ;
  rdfs:comment """The set of fonts used or embedded in the asset. The order of elements in this set carries no semantics. """ ;
  rdfs:range core:FontSet ;
  meta:mandatory false ;
  meta:userEditable false ;
  meta:immutable false ;
  meta:jsonName "fonts" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .
    
core:Layers a core:BaseProperty, owl:FunctionalProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Layers"@en ;
  rdfs:comment """Ordered Array of Layer/LayerGroup structure used inside a document""" ;
  rdfs:range core:LayerList ;
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "layers" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

core:Artboards a core:BaseProperty, owl:FunctionalProperty ;
  # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
  rdfs:label "Artboards"@en ;
  rdfs:comment """Contains the artboards that are being used in the document. A document can have multiple artboards.""" ;
  rdfs:range core:ArtboardSet ;
  meta:mandatory false ;
  meta:userEditable true ;
  meta:immutable false ;
  meta:jsonName "artboards" ;
  skos:note "" ;
  skos:example "" ;
  rdfs:domain core:Asset .

# ### Video class
# @trieloff: covered

# core:Video a rdfs:Class ;
#   rdfs:label "Video" ;
#   rdfs:comment "The Video class is for video assets, i.e. assets that consist of moving pictures and, optionally, sound." ;
#   rdfs:subClassOf core:Asset .

# ### Video properties
# @trieloff: covered

# core:extent a core:BaseProperty, owl:FunctionalProperty ;
#   rdfs:label "Extent"@en ;
#   rdfs:comment """The duration of the video in milliseconds.""" ;
#   rdfs:range xsd:integer ;
#   meta:mandatory false ;
#   meta:userEditable false ;
#   meta:immutable false ;
#   meta:jsonName "extent" ;
#   skos:note "This property is inspired by `dc:extent`. However, `dc:extent` does not specify units. `core:extent` is always an integer and describes the duration in milliseconds." ;
#   skos:example "" ;
#   rdfs:domain core:Video .

# xmpDM:videoFrameRate a core:BaseProperty, owl:FunctionalProperty ;
#   rdfs:label "Video Frame Rate"@en ;
#   rdfs:comment """The video frame rate in frames per second (FPS). Predefined values include: 
# 24
# NTSC
# PAL""" ;
#   rdfs:range xmp:Text ;
#   meta:mandatory false ;
#   meta:userEditable false ;
#   meta:immutable false ;
#   meta:jsonName "video_frame_rate" ;
#   skos:note "" ;
#   skos:example """These examples show common video and audio frame rates:
# Film at 24 fps (frame rate = 24, rate basis = 1): "f24"
# Speech-to-text in milliseconds (frame rate = 1000, rate basis = 1): "f1000"
# NTSC at 29.97 fps (frame rate = 30000, rate basis = 1001): "f30000s1001" """ ;
#   rdfs:domain core:Video .

# ### Properties that apply to Video and Images
# @trieloff: covered

# tiff:ImageWidth a core:BaseProperty, owl:FunctionalProperty ;
#   # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
#   rdfs:label "Width"@en ;
#   rdfs:comment """Width in pixels.""" ;
#   rdfs:range xsd:integer ;
#   meta:mandatory false ;
#   meta:userEditable false ;
#   meta:immutable false ;
#   meta:jsonName "image_width" ;
#   skos:note "" ;
#   skos:example "" ;
#   rdfs:domain core:Image, core:Video .

# tiff:ImageLength a core:BaseProperty, owl:FunctionalProperty ;
#   # XMP uses inconsistent naming conventions/cases: by convention property names should be camel case and start with lower case
#   rdfs:label "Length"@en ;
#   rdfs:comment """Height in pixels. To maintain continuity with the XMP and TIFF standards, the height of an image or video is specified in the property `tiff:ImageLength`. The duration of the video (also commonly called length) is specified in the property `core:extent`. """ ;
#   rdfs:range xsd:integer ;
#   meta:mandatory false ;
#   meta:userEditable false ;
#   meta:immutable false ;
#   meta:jsonName "image_length" ;
#   skos:note "" ;
#   skos:example "" ;
#   rdfs:domain core:Image, core:Video .  

# core:aspectRatio a core:BaseProperty, owl:FunctionalProperty ;
#   rdfs:label "Aspect Ratio"@en ;
#   rdfs:comment "Describes the proportional relationship between the width and the height. To determine the aspect ratio, divide width by height. Videos that have an aspect ratio smaller than one are in landscape format, videos that have an aspect ratio greater than one are in portrait format." ;
#   rdfs:range xsd:float ;
#   meta:mandatory false ;
#   meta:userEditable false ;
#   meta:immutable false ;
#   meta:jsonName "aspect_ratio" ;
#   skos:note "See the definition in https://en.wikipedia.org/wiki/Aspect_ratio_(image)" ;
#   skos:example "" ;
#   rdfs:domain core:Image, core:Video .    
